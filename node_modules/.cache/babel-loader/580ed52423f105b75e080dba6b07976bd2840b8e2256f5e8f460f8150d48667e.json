{"ast":null,"code":"import axios from 'axios';\n\n// API base URL - Change this to your backend URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response4$data;\n  // Handle common errors\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    // Forbidden - show error message\n    console.error('Access forbidden');\n  }\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n    // Server error\n    console.error('Server error:', error.response.data);\n  }\n\n  // Return formatted error\n  const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message || 'Something went wrong';\n  return Promise.reject(new Error(errorMessage));\n});\n\n// API endpoints\nexport const apiEndpoints = {\n  // Auth endpoints\n  auth: {\n    login: '/auth/login',\n    register: '/auth/register',\n    logout: '/auth/logout',\n    me: '/auth/me',\n    forgotPassword: '/auth/forgot-password',\n    resetPassword: '/auth/reset-password'\n  },\n  // User endpoints\n  users: {\n    profile: '/users/profile',\n    updateProfile: '/users/profile',\n    changePassword: '/users/change-password'\n  },\n  // Services endpoints\n  services: {\n    list: '/services',\n    detail: id => `/services/${id}`,\n    create: '/services',\n    update: id => `/services/${id}`,\n    delete: id => `/services/${id}`\n  },\n  // Jobs/Careers endpoints\n  jobs: {\n    list: '/jobs',\n    detail: id => `/jobs/${id}`,\n    apply: id => `/jobs/${id}/apply`,\n    applications: '/jobs/applications'\n  },\n  // Blog endpoints\n  blog: {\n    posts: '/blog/posts',\n    post: slug => `/blog/posts/${slug}`,\n    categories: '/blog/categories',\n    tags: '/blog/tags',\n    comments: postId => `/blog/posts/${postId}/comments`\n  },\n  // Contact endpoints\n  contact: {\n    submit: '/contact/submit',\n    inquiries: '/contact/inquiries'\n  },\n  // Dashboard endpoints\n  dashboard: {\n    stats: '/dashboard/stats',\n    notifications: '/dashboard/notifications',\n    activities: '/dashboard/activities'\n  }\n};\n\n// Generic API methods\nexport const apiMethods = {\n  // GET request\n  get: async (endpoint, params = {}) => {\n    try {\n      return await api.get(endpoint, {\n        params\n      });\n    } catch (error) {\n      throw error;\n    }\n  },\n  // POST request\n  post: async (endpoint, data = {}) => {\n    try {\n      return await api.post(endpoint, data);\n    } catch (error) {\n      throw error;\n    }\n  },\n  // PUT request\n  put: async (endpoint, data = {}) => {\n    try {\n      return await api.put(endpoint, data);\n    } catch (error) {\n      throw error;\n    }\n  },\n  // PATCH request\n  patch: async (endpoint, data = {}) => {\n    try {\n      return await api.patch(endpoint, data);\n    } catch (error) {\n      throw error;\n    }\n  },\n  // DELETE request\n  delete: async endpoint => {\n    try {\n      return await api.delete(endpoint);\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Upload file\n  upload: async (endpoint, formData) => {\n    try {\n      return await api.post(endpoint, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","_error$response2","_error$response3","_error$response4","_error$response4$data","status","removeItem","window","location","href","console","errorMessage","message","Error","apiEndpoints","auth","login","register","logout","me","forgotPassword","resetPassword","users","profile","updateProfile","changePassword","services","list","detail","id","update","delete","jobs","apply","applications","blog","posts","post","slug","categories","tags","comments","postId","contact","submit","inquiries","dashboard","stats","notifications","activities","apiMethods","get","endpoint","params","put","patch","upload","formData"],"sources":["C:/Users/anami/Desktop/zuree-telecom/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API base URL - Change this to your backend URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    // Handle common errors\r\n    if (error.response?.status === 401) {\r\n      // Unauthorized - clear token and redirect to login\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    if (error.response?.status === 403) {\r\n      // Forbidden - show error message\r\n      console.error('Access forbidden');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      // Server error\r\n      console.error('Server error:', error.response.data);\r\n    }\r\n    \r\n    // Return formatted error\r\n    const errorMessage = error.response?.data?.message || error.message || 'Something went wrong';\r\n    return Promise.reject(new Error(errorMessage));\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const apiEndpoints = {\r\n  // Auth endpoints\r\n  auth: {\r\n    login: '/auth/login',\r\n    register: '/auth/register',\r\n    logout: '/auth/logout',\r\n    me: '/auth/me',\r\n    forgotPassword: '/auth/forgot-password',\r\n    resetPassword: '/auth/reset-password',\r\n  },\r\n  \r\n  // User endpoints\r\n  users: {\r\n    profile: '/users/profile',\r\n    updateProfile: '/users/profile',\r\n    changePassword: '/users/change-password',\r\n  },\r\n  \r\n  // Services endpoints\r\n  services: {\r\n    list: '/services',\r\n    detail: (id) => `/services/${id}`,\r\n    create: '/services',\r\n    update: (id) => `/services/${id}`,\r\n    delete: (id) => `/services/${id}`,\r\n  },\r\n  \r\n  // Jobs/Careers endpoints\r\n  jobs: {\r\n    list: '/jobs',\r\n    detail: (id) => `/jobs/${id}`,\r\n    apply: (id) => `/jobs/${id}/apply`,\r\n    applications: '/jobs/applications',\r\n  },\r\n  \r\n  // Blog endpoints\r\n  blog: {\r\n    posts: '/blog/posts',\r\n    post: (slug) => `/blog/posts/${slug}`,\r\n    categories: '/blog/categories',\r\n    tags: '/blog/tags',\r\n    comments: (postId) => `/blog/posts/${postId}/comments`,\r\n  },\r\n  \r\n  // Contact endpoints\r\n  contact: {\r\n    submit: '/contact/submit',\r\n    inquiries: '/contact/inquiries',\r\n  },\r\n  \r\n  // Dashboard endpoints\r\n  dashboard: {\r\n    stats: '/dashboard/stats',\r\n    notifications: '/dashboard/notifications',\r\n    activities: '/dashboard/activities',\r\n  },\r\n};\r\n\r\n// Generic API methods\r\nexport const apiMethods = {\r\n  // GET request\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      return await api.get(endpoint, { params });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // POST request\r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      return await api.post(endpoint, data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // PUT request\r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      return await api.put(endpoint, data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // PATCH request\r\n  patch: async (endpoint, data = {}) => {\r\n    try {\r\n      return await api.patch(endpoint, data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // DELETE request\r\n  delete: async (endpoint) => {\r\n    try {\r\n      return await api.delete(endpoint);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Upload file\r\n  upload: async (endpoint, formData) => {\r\n    try {\r\n      return await api.post(endpoint, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}